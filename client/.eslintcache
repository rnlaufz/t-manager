[{"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Alert.js":"1","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\EditForm.js":"2","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\App.js":"3","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\pages\\Register.js":"4","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\CompletedTask.js":"5","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\actions\\alert.js":"6","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Task.js":"7","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\reducers\\task.js":"8","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\AddForm.js":"9","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\index.js":"10","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\pages\\settings_page\\SettingsAccount.js":"11","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\actions\\auth.js":"12","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\utils\\setAuthToken.js":"13","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\pages\\settings_page\\Settings.js":"14","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Loader.js":"15","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\actions\\navTitle.js":"16","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\pages\\Login.js":"17","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\CompletedTasks.js":"18","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Tasks.js":"19","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\pages\\settings_page\\SettingsUserData.js":"20","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\routing\\PrivateRoute.js":"21","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\actions\\types.js":"22","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\actions\\task.js":"23","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\SecondaryNav.js":"24","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\MainNav.js":"25","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Footer.js":"26","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\reducers\\alert.js":"27","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Dashboard.js":"28","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\store.js":"29","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\NoTasks.js":"30"},{"size":520,"mtime":1609321257408,"results":"31","hashOfConfig":"32"},{"size":3817,"mtime":1611654670075,"results":"33","hashOfConfig":"32"},{"size":5672,"mtime":1610202041565,"results":"34","hashOfConfig":"32"},{"size":4182,"mtime":1610608632831,"results":"35","hashOfConfig":"32"},{"size":1462,"mtime":1611654342616,"results":"36","hashOfConfig":"32"},{"size":361,"mtime":1607078663534,"results":"37","hashOfConfig":"32"},{"size":2186,"mtime":1611654194405,"results":"38","hashOfConfig":"32"},{"size":1494,"mtime":1612171477128,"results":"39","hashOfConfig":"32"},{"size":2686,"mtime":1611654646152,"results":"40","hashOfConfig":"32"},{"size":226,"mtime":1603715219092,"results":"41","hashOfConfig":"32"},{"size":1229,"mtime":1612258194397,"results":"42","hashOfConfig":"32"},{"size":3099,"mtime":1612175841779,"results":"43","hashOfConfig":"32"},{"size":260,"mtime":1612102232531,"results":"44","hashOfConfig":"32"},{"size":623,"mtime":1611820845379,"results":"45","hashOfConfig":"32"},{"size":176,"mtime":1610713894076,"results":"46","hashOfConfig":"32"},{"size":220,"mtime":1609420427642,"results":"47","hashOfConfig":"32"},{"size":3039,"mtime":1610608741657,"results":"48","hashOfConfig":"32"},{"size":1452,"mtime":1611654262445,"results":"49","hashOfConfig":"32"},{"size":1408,"mtime":1612172349099,"results":"50","hashOfConfig":"32"},{"size":2758,"mtime":1612176243782,"results":"51","hashOfConfig":"32"},{"size":603,"mtime":1608809200676,"results":"52","hashOfConfig":"32"},{"size":1017,"mtime":1611841194560,"results":"53","hashOfConfig":"32"},{"size":3928,"mtime":1612175499787,"results":"54","hashOfConfig":"32"},{"size":1732,"mtime":1612260377288,"results":"55","hashOfConfig":"32"},{"size":423,"mtime":1604823146003,"results":"56","hashOfConfig":"32"},{"size":223,"mtime":1609479634878,"results":"57","hashOfConfig":"32"},{"size":437,"mtime":1606918509543,"results":"58","hashOfConfig":"32"},{"size":241,"mtime":1609323605781,"results":"59","hashOfConfig":"32"},{"size":929,"mtime":1612259247760,"results":"60","hashOfConfig":"32"},{"size":280,"mtime":1612172298001,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1d4sacb",{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Alert.js",[],["134","135"],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\EditForm.js",["136","137","138"],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\App.js",["139","140"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {v4 as uuid} from \"uuid\";\r\nimport propTypes from 'prop-types';\r\n// Redux\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport PrivateRoute from './components/routing/PrivateRoute'\r\n\r\n// Import css\r\nimport './index.css';\r\n\r\n// Import components\r\nimport Dashboard from './components/Dashboard';\r\n\r\n\r\nimport AddForm from './components/AddForm';\r\nimport EditForm from './components/EditForm';\r\nimport CompletedTasks from './components/CompletedTasks';\r\nimport MainNav from './components/MainNav';\r\n\r\nimport Settings from './pages/settings_page/Settings';\r\nimport SettingsUserData from './pages/settings_page/SettingsUserData';\r\nimport SettingsAccount from './pages/settings_page/SettingsAccount';\r\nimport Tasks from './components/Tasks';\r\n\r\nimport SecondaryNav from './components/SecondaryNav';\r\nimport Footer from './components/Footer';\r\nimport Register from './pages/Register';\r\nimport Login from './pages/Login';\r\n\r\nimport {loadUser} from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\n\r\nimport Alert from './components/Alert';\r\n\r\nexport class App extends React.Component {\r\n \r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      isSignedIn: true,\r\n      // Navigation Links\r\n      dashLinks: [\r\n        {\r\n          key: uuid(),\r\n          linkTitle: \"My Tasks\",\r\n          linkPath: \"/dashboard\"\r\n        },\r\n        {\r\n          key: uuid(),\r\n          linkTitle: \"Completed\",\r\n          linkPath: \"/completed\"\r\n        }\r\n      ],\r\n      settLinks: [\r\n        {\r\n          key: uuid(),\r\n          linkTitle: \"User\",\r\n          linkPath: \"/settings/user_data\"\r\n        },\r\n        {\r\n          key: uuid(),\r\n          linkTitle: \"Account\",\r\n          linkPath: \"/settings/manage_account\"\r\n        },\r\n        {\r\n          key: uuid(),\r\n          linkTitle: \"Dashboard\",\r\n          linkPath: \"/dashboard\"\r\n        }\r\n      ],\r\n     \r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n// Add task\r\n// addTask = (title, urgent) => {\r\n//   const newTask = {\r\n//     id: uuid(),\r\n//     title,\r\n//     urgent\r\n//   }\r\n//   this.setState({tasks: [...this.state.tasks, newTask]});\r\n// }\r\n\r\n// @TO_DO editTask\r\n\r\n// @TO_DO rewrite functions to work via redux \r\n// Mark task completed\r\n// markCompleted = (id) => {\r\n//   this.setState({tasks: this.state.tasks.map(task => {\r\n//     if(task.id === id){\r\n//       task.completed = !task.completed \r\n//     }\r\n//     return task\r\n//   })});\r\n// }\r\n\r\ncomponentDidMount(){\r\n  store.dispatch(loadUser())\r\n}\r\n  // Rendering application\r\n  render() {\r\n    if(localStorage.token){\r\n      setAuthToken(localStorage.token);\r\n  }\r\n\r\n  \r\n    return (      \r\n    <Provider store={store}> \r\n      <Router>\r\n        <div className=\"container\">\r\n          <SecondaryNav />\r\n          <div className=\"wrapper\">\r\n          <Route exact path=\"/\" render={props =>(<Register /> )} />\r\n            <Switch>\r\n            <Route exact path=\"/login\" render={props =>(<Login  />)}/>\r\n            <Route exact path=\"/register\" render={props =>(<Register  /> )}/>\r\n            \r\n            {/* @TO_DO rebuild componet structure */}\r\n\r\n            {/* Protefcted Route */}\r\n            <PrivateRoute exact path=\"/dashboard\" component={(props) => \r\n            <React.Fragment>\r\n                 <MainNav links={this.state.dashLinks} />\r\n              <Dashboard>\r\n              <Tasks  tasks = {this.state.tasks} deleteTask={this.deleteTask} markCompleted={this.markCompleted} />\r\n              </Dashboard>\r\n              </React.Fragment>\r\n            \r\n              } />\r\n            <PrivateRoute exact path=\"/new_task\" component={(props) =>\r\n              <React.Fragment>\r\n                  <MainNav links={this.state.dashLinks} />\r\n              <Dashboard>\r\n              <AddForm  addTask = { this.addTask} updateNav={this.updateNav} />\r\n              </Dashboard>\r\n                </React.Fragment>\r\n             \r\n              } />\r\n            <PrivateRoute exact path=\"/edit_task\" component={(props) => \r\n            <React.Fragment>\r\n               <MainNav links={this.state.dashLinks} />\r\n            <Dashboard>\r\n              <EditForm/>\r\n              </Dashboard>\r\n              </React.Fragment>\r\n           \r\n              } />\r\n            <PrivateRoute exact path=\"/completed\" component={(props) => \r\n             <React.Fragment>\r\n                 <MainNav links={this.state.dashLinks} />\r\n                 <Dashboard>\r\n            <CompletedTasks tasks = {this.state.tasks} />\r\n            </Dashboard>\r\n             </React.Fragment>\r\n           \r\n              } />\r\n\r\n              {/* Settings */}\r\n\r\n              <PrivateRoute exact path=\"/settings/user_data\" component={(props) => \r\n               <React.Fragment>\r\n                  <MainNav links={this.state.settLinks} />\r\n                  <Dashboard>\r\n              <Settings >\r\n              <SettingsUserData />\r\n              </Settings>\r\n              </Dashboard>\r\n               </React.Fragment>\r\n             \r\n              } />\r\n              <PrivateRoute exact path=\"/settings/manage_account\" component={(props) => \r\n               <React.Fragment>\r\n                    <MainNav links={this.state.settLinks} />\r\n                    <Dashboard>\r\n              <Settings>\r\n              <SettingsAccount   />\r\n              </Settings>\r\n              </Dashboard>\r\n               </React.Fragment>\r\n           \r\n              } />\r\n           \r\n            </Switch>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n        </Router>\r\n    </Provider> \r\n\r\n\r\n    )\r\n  \r\n  }\r\n  \r\n\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n",["141","142"],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\pages\\Register.js",[],["143","144"],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\CompletedTask.js",["145","146","147","148"],"import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport propTypes from 'prop-types';\r\n\r\n// Icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCheck, faEdit, faExclamationCircle, faTrash} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {deleteTask} from \"../actions/task\";\r\nimport {getCompleted} from \"../actions/task\";\r\nimport {setAlert} from \"../actions/alert\";\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst CompletedTask = ({setAlert, getCompleted, deleteTask, task: {_id, title, urgent, completed}}) => {\r\n   \r\n    // Click button to send tasks id to delete action \r\n    const deleteSelectedTask = async () => {\r\n     await deleteTask(_id);\r\n    getCompleted();\r\n    setAlert(\"Task deleted\", \"danger\")\r\n    } \r\n \r\n    return (\r\n        <li id={_id} className=\"task\"> <p className=\"list-item-control\">{title} {urgent ? <small className=\"urgent\"><FontAwesomeIcon icon={faExclamationCircle} /></small> : null}</p>\r\n       \r\n            <button onClick={deleteSelectedTask} className=\"delete li-btn\"><i><FontAwesomeIcon icon={faTrash} /></i></button></li>\r\n      \r\n        )\r\n}\r\n\r\n// Prop types\r\nCompletedTask.propTypes = {\r\n    task: propTypes.object.isRequired,\r\n    deleteTask: propTypes.func.isRequired,\r\n    getCompleted: propTypes.func.isRequired,\r\n    setAlert: propTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect(null, {deleteTask, getCompleted, setAlert})(CompletedTask)","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\actions\\alert.js",[],["149","150"],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Task.js",[],["151","152"],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\reducers\\task.js",["153"],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\AddForm.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\index.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\pages\\settings_page\\SettingsAccount.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\actions\\auth.js",["154"],"import axios from 'axios';\r\n\r\nimport {setAlert} from \"./alert\";\r\n\r\nimport {REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, CHANGE_USER_DATA, DELETE_USER} from './types';\r\n\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\n// Load user \r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n// Register User\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json '\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({name, email, password});\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config);\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n\r\n        const errors = err.response.data.errors;\r\n        \r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json '\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email, password});\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config);\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n\r\n        const errors = err.response.data.errors;\r\n        \r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.message, \"danger\")));\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Change user email or password \r\nexport const updateUserData = (body) => async dispatch => {\r\n    try {\r\n        const res = await axios.post('/api/users/update', body);\r\n        dispatch({\r\n            type: CHANGE_USER_DATA,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.message, \"danger\")));\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const deleteUser = () =>async  dispatch => {\r\n    try {\r\n        const res = await axios.delete('/api/users');\r\n        dispatch({\r\n            type: DELETE_USER\r\n        })\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.message, \"danger\")));\r\n        }\r\n    }\r\n}\r\n\r\n// Logout \r\nexport const logout = () => dispatch => {\r\n    dispatch({type: LOGOUT});\r\n}","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\pages\\settings_page\\Settings.js",["155"],"import React, { useState, useEffect } from 'react'\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {setNavTitle} from '../../actions/navTitle';\r\n\r\n\r\n\r\n const Settings = (props) => {\r\n     useEffect(()=> {\r\n        props.setNavTitle(\"Settings\");  \r\n     })\r\n    return (\r\n        <React.Fragment>\r\n           {props.children} \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nSettings.propTypes = {\r\n    setNavTitle: propTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    navTitle: state.navTitle.title\r\n})\r\n\r\nexport default connect(mapStateToProps, {setNavTitle})(Settings)\r\n\r\n","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Loader.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\actions\\navTitle.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\pages\\Login.js",[],["156","157"],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\CompletedTasks.js",["158","159"],"import React, { useEffect, useState } from 'react';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nimport propTypes from 'prop-types';\r\n\r\nimport Loader from './Loader';\r\nimport CompletedTask from \"./CompletedTask\";\r\nimport { connect } from 'react-redux';\r\nimport {setNavTitle} from '../actions/navTitle';\r\nimport {getCompleted} from \"../actions/task\";\r\nimport Alert from './Alert';\r\n\r\n\r\n\r\nconst CompletedTasks = ({task: {tasks, noCompletes}, setNavTitle, getCompleted}) => {\r\n\r\n  \r\n    // @TO_DO: move checkCompleted to redux \r\n\r\n    useEffect(() => {\r\n        setNavTitle(\"Completed\");\r\n        getCompleted()\r\n    }, []); \r\n\r\n    return ( <React.Fragment>\r\n     <Alert />          \r\n    <div className=\"tasks-list-container\">\r\n    <h3>{!noCompletes ? \"Completed tasks:\" : \"You have yet to complete some tasks\"}</h3>\r\n        {tasks ?  \r\n        <ul className=\"tasks-list\">\r\n            {tasks.map((task) => ( \r\n                <CompletedTask id={uuid()} key={uuid()} task={task} />\r\n           ))}\r\n        </ul> :\r\n        <Loader />}\r\n    </div>    \r\n\r\n        </React.Fragment>)\r\n}\r\n\r\n\r\n// Prop types\r\nCompletedTasks.propTypes = {\r\n    setNavTitle: propTypes.func.isRequired,\r\n    getCompleted: propTypes.func.isRequired,\r\n    task: propTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    navTitle: state.navTitle.title,\r\n    task: state.task,\r\n})\r\n\r\nexport default connect(mapStateToProps, {setNavTitle, getCompleted})(CompletedTasks)\r\n","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Tasks.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\pages\\settings_page\\SettingsUserData.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\actions\\types.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\actions\\task.js",["160","161","162"],"import {GET_TASKS, GET_TASK, UPDATE_TASK, GET_COMPTASKS, DELETE_TASK, DELETE_USER_DATA, TASK_ERROR} from './types';\r\nimport axios from \"axios\";\r\n\r\nimport {setAlert} from './alert'\r\n\r\n// @TO_DO create func for NEW, EDIT, GET && TEST DELETE\r\nexport const getTasks = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/tasks/me');\r\n        dispatch({\r\n            type: GET_TASKS,\r\n            payload: res.data\r\n        })\r\n        \r\n    } \r\n    catch(err) {\r\n        dispatch({\r\n            type: TASK_ERROR,\r\n            payload: {message: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\nexport const getCompleted = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/tasks/completed');\r\n        dispatch({\r\n            type: GET_COMPTASKS,\r\n            payload: res.data\r\n        })\r\n        \r\n    } \r\n    catch(err) {\r\n        dispatch({\r\n            type: TASK_ERROR,\r\n            payload: {message: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const newTask = (title, urgent, completed) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json '\r\n        }\r\n    }\r\n    const body = JSON.stringify({title, urgent, completed})\r\n    \r\n   try {\r\n       const res = await axios.post('/api/tasks', body, config);\r\n       dispatch({\r\n           type: UPDATE_TASK,\r\n           payload: res.data\r\n       });\r\n       dispatch(getTasks());\r\n   }\r\n   catch(err){\r\n    dispatch({\r\n        type: TASK_ERROR,\r\n        payload: {message: err.response.statusText, status: err.response.status}\r\n    });\r\n   }\r\n}\r\n\r\nexport const getTaskData = (id) => async dispatch => {\r\n     try{\r\n         const res = await axios.get(`/api/tasks/${id}`)\r\n         dispatch({\r\n            type: GET_TASK,\r\n            payload: res.data\r\n        })\r\n     }\r\n     catch(err){\r\n         dispatch({\r\n             type: TASK_ERROR,\r\n             payload: {message: err.response.statusText, status: err.response.status}\r\n         })\r\n     }\r\n }\r\n\r\n//  Edit task\r\nexport const editTask = (taskData) => async dispatch => {\r\n    // const config = {\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json '\r\n    //     }\r\n    // }\r\n    try{\r\n        const res = await axios.post(`/api/tasks/update`, taskData)\r\n        dispatch({\r\n           type: UPDATE_TASK,\r\n           payload: res.data\r\n       })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: TASK_ERROR,\r\n            payload: {message: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\nexport const completeTask = (_id) => async dispatch => {\r\n    \r\n    try{\r\n        const res = await axios.post(`/api/tasks/${_id}`,)\r\n        dispatch({\r\n           type: UPDATE_TASK,\r\n           payload: res.data\r\n       })\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: TASK_ERROR,\r\n            payload: {message: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n// Each task component sends id of the task as a part of the url | function sends the url with id to the server \r\nexport const deleteTask = (id) => async dispatch => {\r\n    try{\r\n        const res = await axios.delete(`/api/tasks/${id}`)\r\n        dispatch({\r\n            type: DELETE_TASK\r\n        });\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: TASK_ERROR,\r\n            payload: {message: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n  \r\n}\r\nexport const resetTasks = () => async dispatch => {\r\n    try{\r\n        const res = await axios.delete(`/api/tasks/`)\r\n        dispatch({\r\n            type: DELETE_USER_DATA\r\n        });\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: TASK_ERROR,\r\n            payload: {message: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n  \r\n}\r\n\r\n","C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\SecondaryNav.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\MainNav.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Footer.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\reducers\\alert.js",["163"],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\Dashboard.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\store.js",[],"C:\\Users\\Regina\\Desktop\\t-manager 0.2\\t-manager\\client\\src\\components\\NoTasks.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":1,"column":38,"nodeType":"170","messageId":"171","endLine":1,"endColumn":49},{"ruleId":"172","severity":1,"message":"173","line":31,"column":9,"nodeType":"174","endLine":31,"endColumn":50,"suggestions":"175"},{"ruleId":"168","severity":1,"message":"176","line":33,"column":32,"nodeType":"170","messageId":"171","endLine":33,"endColumn":41},{"ruleId":"168","severity":1,"message":"177","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":17},{"ruleId":"168","severity":1,"message":"178","line":36,"column":8,"nodeType":"170","messageId":"171","endLine":36,"endColumn":13},{"ruleId":"164","replacedBy":"179"},{"ruleId":"166","replacedBy":"180"},{"ruleId":"164","replacedBy":"181"},{"ruleId":"166","replacedBy":"182"},{"ruleId":"168","severity":1,"message":"183","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"184","line":2,"column":9,"nodeType":"170","messageId":"171","endLine":2,"endColumn":13},{"ruleId":"168","severity":1,"message":"185","line":7,"column":9,"nodeType":"170","messageId":"171","endLine":7,"endColumn":16},{"ruleId":"168","severity":1,"message":"186","line":7,"column":18,"nodeType":"170","messageId":"171","endLine":7,"endColumn":24},{"ruleId":"164","replacedBy":"187"},{"ruleId":"166","replacedBy":"188"},{"ruleId":"164","replacedBy":"189"},{"ruleId":"166","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":11,"column":1,"nodeType":"193","endLine":56,"endColumn":2},{"ruleId":"168","severity":1,"message":"194","line":110,"column":15,"nodeType":"170","messageId":"171","endLine":110,"endColumn":18},{"ruleId":"168","severity":1,"message":"195","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"164","replacedBy":"196"},{"ruleId":"166","replacedBy":"197"},{"ruleId":"168","severity":1,"message":"195","line":1,"column":28,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"198","line":23,"column":8,"nodeType":"174","endLine":23,"endColumn":10,"suggestions":"199"},{"ruleId":"168","severity":1,"message":"200","line":4,"column":9,"nodeType":"170","messageId":"171","endLine":4,"endColumn":17},{"ruleId":"168","severity":1,"message":"194","line":123,"column":15,"nodeType":"170","messageId":"171","endLine":123,"endColumn":18},{"ruleId":"168","severity":1,"message":"194","line":138,"column":15,"nodeType":"170","messageId":"171","endLine":138,"endColumn":18},{"ruleId":"191","severity":1,"message":"192","line":6,"column":1,"nodeType":"193","endLine":18,"endColumn":2},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["203"],"'completed' is assigned a value but never used.","'propTypes' is defined but never used.","'Alert' is defined but never used.",["201"],["202"],["201"],["202"],"'Component' is defined but never used.","'Link' is defined but never used.","'faCheck' is defined but never used.","'faEdit' is defined but never used.",["201"],["202"],["201"],["202"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'res' is assigned a value but never used.","'useState' is defined but never used.",["201"],["202"],"React Hook useEffect has missing dependencies: 'getCompleted' and 'setNavTitle'. Either include them or remove the dependency array. If 'setNavTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["204"],"'setAlert' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [task, loading, setNavTitle, getTaskData, formData]",{"range":"209","text":"210"},"Update the dependencies array to be: [getCompleted, setNavTitle]",{"range":"211","text":"212"},[1120,1161],"[task, loading, setNavTitle, getTaskData, formData]",[609,611],"[getCompleted, setNavTitle]"]